---
import Footer from '@components/footer/footer.astro';
import {Navbar} from '@components/navbar';
import {cn} from '@lib/utils/'
import {ViewTransitions} from 'astro:transitions'
import { Analytics } from '@vercel/analytics/react';

interface Props {
	title?: string;
	className?: string
	footer?: boolean
	optViewTransitions?: boolean
}

const { title="Christopher Alden", className="", footer=true, optViewTransitions=false} = Astro.props;
---

<!doctype html>
<html lang="en">

	<head>
		<meta charset="UTF-8" />

		<meta name="description" content="Christopher Alden is a fullstack developer and a designer. Portfolio website containing his previous works." />
		<meta name="keywords" content="web developer jakarta, agency website design, minimalist website design, portfolio website, Christopher Alden, clean website design, swiss style web design">

		<meta property="og:title" content="Christopher Alden - Fullstack Developer & Designer">
		<meta property="og:description" content="Check out Christopher Alden's portfolio showcasing web development and design work.">
		<meta property="og:type" content="website">
    
		<meta name="viewport" content="width=device-width" />
		<link rel="sitemap" href="/sitemap-index.xml" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<link rel="stylesheet" href="/styles/typography.css">
		{optViewTransitions && <ViewTransitions/>}
		<title>{title}</title>
	</head>

	<body class={className}>
		<Navbar client:only="react"/>
		<div class={cn("bg-background justify-start min-h-[100dvh] flex flex-col w-screen text-sm md:text-base", className)}>
			<slot />
		</div>
		{footer && <Footer/>}
		<Analytics mode={'production'} client:load/>
	</body>

</html>

<style is:global>
	::-webkit-scrollbar-track {
		background-color: transparent;
	}

	::-webkit-scrollbar-thumb {
		background-color: transparent;
		border-radius: 10px;
	}

	::-webkit-scrollbar {
		width: 0px;
	}
	::-moz-selection {
		color: white;
		background: #0000FF
	}

	::selection {
		color: white;
		background: #0000FF
	}
	:root {
		background-color: #fafafa;
		min-height: min;
	}
	*{
		box-sizing: border-box;
		user-select: text;
	}
	a {
		all: unset;
	}
	html {
		font-family: 'Montreal', monospace;
	}
	input{
		all: unset;
	}
	button{
		all:unset;
		cursor: pointer;
		user-select: none;
	}
	a{
		-webkit-user-drag: none;
	}
	.no-select{
		user-select: none;
	}
</style>
<script >
	
	import LocomotiveScroll from 'locomotive-scroll';
	const options = {
			wrapper: window,
			content: document.documentElement,
			lerp: 0.3,
			duration: 0.3,
			orientation: 'vertical',
			gestureOrientation: 'vertical',
			smoothWheel: true,
			smoothTouch: false,
			wheelMultiplier: 2,
			touchMultiplier: 2,
			normalizeWheel: true,
	}
	const locomotiveScroll = new LocomotiveScroll(options);
</script>

<script is:inline type="application/ld+json">
{
	"@context": "https://schema.org",
	"@type": "Person",
	"name": "Christopher Alden",
	"jobTitle": "Fullstack Developer and Designer",
	"url": "https://christopheralden.dev",
	"sameAs": [
		"https://github.com/christphralden/",
		"https://www.linkedin.com/in/christphralden/",
		"https://instagram.com/christphralden/"
	]
}
</script>
